{"version":3,"file":"static/js/544.356bc313.chunk.js","mappings":"0NAEaA,EAAcC,EAAAA,EAAAA,IAAH,wCAIXC,EAAKD,EAAAA,EAAAA,GAAH,4C,SCFFE,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACf,OACE,UAACN,EAAD,YACE,gBACEO,IACED,EACI,UAAGE,EAAAA,IAAeF,EAClB,yDAENG,IAAKJ,KAEP,SAACH,EAAD,UAAKG,MAGV,E,UChBYK,EAAOT,EAAAA,EAAAA,GAAH,wMAQJU,GAAaV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,qECNVY,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,SAAAb,GAAK,OACf,yBACE,SAACO,EAAD,CAAYO,GAAE,kBAAad,EAAMe,IAAMC,MAAO,CAAEC,KAAMN,GAAtD,UACE,SAACZ,EAAD,CAAWC,MAAOA,OAFbA,EAAMe,GADA,KAStB,C,+GCID,UAlBa,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,mGACQD,EADR,UACwBE,EAAAA,EAAAA,MADxB,kFAEkBC,QAAQC,QAF1B,0DADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,KAGD,6BACE,4CACA,SAAC,IAAD,CAAYd,OAAQA,MAGzB,C,4PCnBDe,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACVC,EAAM,kBAAcD,EAAd,uCAECtB,EAAa,kCACbwB,EAAa,mCAEnB,SAAeP,IAAtB,4CAAO,OAAP,oBAAO,oGACkBI,IAAAA,IAAA,6BAAgCE,IADlD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBR,IAAAA,IAAA,6BACCQ,EADD,mBACuBN,IAFzC,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBV,IAAAA,IAAA,gBACZU,EADY,oBACOT,EADP,oBADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,gGAEoBV,IAAAA,IAAA,gBACdU,EADc,6BACcT,EADd,oBAFpB,cAEGG,EAFH,yBAKIA,EAASC,KAAKO,MALlB,gCAMIf,QAAQC,QANZ,gFAQA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,uFACkBV,IAAAA,IAAA,gBACZU,EADY,6BACgBT,EADhB,oBADlB,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE","sources":["components/MovieItem/MovieItem.Styled.jsx","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/API-service.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CardWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const H2 = styled.h2`\n  font-size: 18px;\n`;\n","import PropTypes from \"prop-types\";\nimport { posterW500 } from \"../../services/API-service\";\nimport { CardWrapper, H2 } from \"./MovieItem.Styled\";\n\nexport const MovieItem = ({ movie }) => {\n  const { title, poster_path } = movie;\n  return (\n    <CardWrapper>\n      <img\n        src={\n          poster_path\n            ? `${posterW500}` + poster_path\n            : \"https://i.postimg.cc/MTBLYYMP/poster-not-available.jpg\"\n        }\n        alt={title}\n        />\n      <H2>{title}</H2>\n    </CardWrapper>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n  justify-content: center;\n  margin: 20px auto;\n`;\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #000000;\n`;","import PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { MovieItem } from \"../MovieItem/MovieItem\";\nimport { List, StyledLink } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <MovieItem movie={movie} />\n          </StyledLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};","import { useState, useEffect } from \"react\";\nimport { getTrendyMovies } from \"../../services/API-service\";\nimport { MoviesList } from \"../../components/MoviesList/MoviesList\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function getMovies() {\n      try { setMovies(await getTrendyMovies()); }\n      catch (error) { console.error(); }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\nexport default Home;","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"86ce07b8f3d2976f0645a9d5066f9d40\";\nconst params = `api_key=${API_KEY}&language=en-US&include_adult=false`;\n\nexport const posterW500 = \"https://image.tmdb.org/t/p/w500\";\nexport const posterW200 = \"https://image.tmdb.org/t/p/w200/\";\n\nexport async function getTrendyMovies() {\n  const response = await axios.get(`trending/movie/day?${params}`);\n  return response.data.results;\n};\nexport async function getFoundMovies(searchQuery) {\n  const response = await axios.get(\n    `search/movie?query=${searchQuery}&page=1&${params}`\n  );\n  return response.data.results;\n};\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n    `movie/${movieId}/credits?&api_key=${API_KEY}&language=en-US`\n  );\n    return response.data.cast;\n  } catch {console.error();}\n};\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?&api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["CardWrapper","styled","H2","MovieItem","movie","title","poster_path","src","posterW500","alt","List","StyledLink","Link","MoviesList","movies","location","useLocation","map","to","id","state","from","useState","setMovies","useEffect","getTrendyMovies","console","error","getMovies","axios","API_KEY","params","posterW200","response","data","results","getFoundMovies","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}