{"version":3,"file":"static/js/703.12a95d8a.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.Styled.jsx","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/API-service.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CardWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const H2 = styled.h2`\n  font-size: 18px;\n`;\n","import PropTypes from \"prop-types\";\nimport { posterW500 } from \"../../services/API-service\";\nimport { CardWrapper, H2 } from \"./MovieItem.Styled\";\n\nexport const MovieItem = ({ movie }) => {\n  const { title, poster_path } = movie;\n  return (\n    <CardWrapper>\n      <img\n        src={\n          poster_path\n            ? `${posterW500}` + poster_path\n            : \"https://i.postimg.cc/MTBLYYMP/poster-not-available.jpg\"\n        }\n        alt={title}\n        />\n      <H2>{title}</H2>\n    </CardWrapper>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n  justify-content: center;\n  margin: 20px auto;\n`;\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #000000;\n`;","import PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { MovieItem } from \"../MovieItem/MovieItem\";\nimport { List, StyledLink } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <MovieItem movie={movie} />\n          </StyledLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};","import styled from \"@emotion/styled\";\n\nexport const SearchForm = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n`;\nexport const SearchInput = styled.input`\n  padding: 8px 32px 8px 8px;\n  ackground-color: transparent;\n  border-radius: 4px;\n  border: 1px solid #000000;\n  font: inherit;\n`;\n\nexport const SearchBtn = styled.button`\n  position: absolute;\n  top: 11px;\n  right: 6px;\n  padding: 0;\n  border: none;\n  color: #000000;\n  background-color: transparent;\n  cursor: pointer;\n`;","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { toast } from \"react-toastify\";\nimport { SearchForm, SearchInput, SearchBtn } from \"./SearchBar.styled\";\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const hendleSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchQuery);\n    if (searchQuery.trim() === \"\") {\n      setSearchQuery(\"\");\n      return toast.info(\"Please enter a search query\");\n    };\n    setSearchQuery(\"\");\n  }\n  return (\n    <SearchForm onSubmit={hendleSubmit}>\n      <SearchInput\n        type=\"text\"\n        name=\"searchQuery\"\n        placeholder=\"Enter movie name\"\n        value={searchQuery}\n        onChange={e => setSearchQuery(e.target.value)}\n      />\n      <SearchBtn type=\"submit\"><FaSearch /></SearchBtn>\n    </SearchForm>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { getFoundMovies } from \"../../services/API-service\";\nimport { MoviesList } from \"../../components/MoviesList/MoviesList\";\nimport { SearchBar } from \"../../components/SearchBar/SearchBar\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\") ?? \"\";\n  // console.log(query);\n\n  useEffect(() => {\n    if (query.trim() === \"\") { return };\n    async function getMovies(queryVal) {\n      if (queryVal.trim()!==\"\") {\n        try {\n          const foundMovies = await getFoundMovies(queryVal);\n          setMovies(foundMovies);\n        } catch {console.error();}\n      }\n    };\n    getMovies(query);\n  }, [query]);\n  \n\n  const changeQuery = value => {\n    if (value === query) {\n      return toast.info(`You just searched for ${query}. Try searching for something else`);\n    };\n    setSearchParams(value !== \"\" ? { query: value } : {});\n  }\n  \n  return (\n    <>\n      <SearchBar onSubmit={changeQuery}/>\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"86ce07b8f3d2976f0645a9d5066f9d40\";\nconst params = `api_key=${API_KEY}&language=en-US&include_adult=false`;\n\nexport const posterW500 = \"https://image.tmdb.org/t/p/w500\";\nexport const posterW200 = \"https://image.tmdb.org/t/p/w200/\";\n\nexport async function getTrendyMovies() {\n  const response = await axios.get(`trending/movie/day?${params}`);\n  return response.data.results;\n};\nexport async function getFoundMovies(searchQuery) {\n  const response = await axios.get(\n    `search/movie?query=${searchQuery}&page=1&${params}`\n  );\n  return response.data.results;\n};\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n    `movie/${movieId}/credits?&api_key=${API_KEY}&language=en-US`\n  );\n    return response.data.cast;\n  } catch {console.error();}\n};\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?&api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["CardWrapper","styled","H2","MovieItem","movie","title","poster_path","src","posterW500","alt","List","StyledLink","Link","MoviesList","movies","location","useLocation","map","to","id","state","from","SearchForm","SearchInput","SearchBtn","SearchBar","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","trim","toast","type","name","placeholder","value","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","queryVal","getFoundMovies","foundMovies","console","error","getMovies","axios","API_KEY","params","posterW200","getTrendyMovies","response","data","results","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}